@using BilConnect.Data.Enums;
@model ApplicationUser

@{
    ViewData["Title"] = "List of Posts";
}

<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin: 0;
        padding: 0;
        background: rgb(240,224,209);
        background: linear-gradient(180deg, rgba(240,224,209,1) 0%, rgba(249,175,105,1) 100%);
        display: flex;
        flex-direction: column;
        min-height: 100vh;
    }

    .post-card {
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        overflow: hidden;
        height: 400px; /* Fixed height */
        display: flex;
        flex-direction: column;
        justify-content: space-between; /* Distributes space inside the card */
        background-color: #e5ddd5;
        animation: jumpIn 0.6s ease-out;
    }

    @@keyframes jumpIn {
        0% {
            transform: translateY(50px);
            opacity: 0;
        }

        50% {
            transform: translateY(-10px);
            opacity: 1;
        }

        100% {
            transform: translateY(0);
            opacity: 1;
        }
    }

    .post-info {
        display: flex;
        flex-direction: column;
        gap: 5px;
        color: black; /* Set the text color to gray */
    }

        /* To specifically target links within .post-info to ensure they are gray too */
        .post-info a {
            color: black;
        }

            /* Change color on hover for links, if desired */
            .post-info a:hover {
                color: lightgray; /* Replace with a darker shade of gray if you wish */
            }

    .info-item {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .material-icons {
        color: #757575;
    }


    .info-label {
        font-weight: bold;
        color: #555;
        margin-right: 5px;
    }



    .post-card-header {
        background-color: #e5ddd5;
        color: black;
        text-align: center;
        font-family: "Segoe UI", Arial, sans-serif;
        padding: 10px;
        font-size: 25px;
    }

    .post-card-body {
        padding: 10px;
        background-color: #e5ddd5;
    }

    .post-img {
        width: 100%;
        height: 150px;
        object-fit: cover;
    }

    .post-card-footer {
        padding: 10px;
        background-color: #d4ccc4;
        text-align: center;
    }

    .btn-whatsapp {
        background-color: #757575;
        color: white;
    }

    .btn-secondary {
        background-color: #757575;
    }

    .search-container {
        display: flex;
        justify-content: center;
        margin-bottom: 20px;
    }

    .search-input {
        width: 70%;
        padding: 10px;
        border-radius: 20px;
        border: 1px solid #757575;
        outline: none;
    }
    .modal {
        animation: jumpIn 0.6s ease-out;
    }

</style>


@functions {
    private string GetBadgeClass(BilConnect.Data.Enums.PostStatus status) // Replace 'YourEnumType' with the actual type of your enum
    {
        switch (status)
        {
            case BilConnect.Data.Enums.PostStatus.Available:
                return "bg-success";
            case BilConnect.Data.Enums.PostStatus.Suspended:
                return "bg-danger";
            default:
                return "bg-secondary";
        }
    }
}

<div class="container">
    <div class="search-container" id="searchField">
        <input type="text" class="search-input" placeholder="Search posts..." maxlength="100">
    </div>

    <div class="row">
        @if (Model != null && Model.Posts != null && Model.Posts.Count > 0)
        {
            @foreach (var item in Model.Posts)
            {
                <div class="col-md-4 col-sm-6 mb-4">
                    <a href="@Url.Action("Details", "Posts", new { id = item.Id })" class="text-decoration-none">
                        <div class="post-card" data-title="@item.Title">
                            <div class="post-card-header">
                                @item.Title
                            </div>
                            <img src="@item.ImageURL" alt="@item.Title" class="post-img">
                            <div class="post-card-body">
                                <div class="post-info">
                                    <p class="info-item">
                                        <i class="material-icons">event</i>
                                        <span>Date: @item.PostDate.ToLocalTime().ToString("dd MMM yyyy")</span>
                                    </p>
                                    <p class="info-item">
                                        <b>Status: </b>
                                        <span class="badge @GetBadgeClass(@item.PostStatus) text-white">@item.PostStatus</span>
                                    </p>     
                                </div>
                            </div>
                            <div class="post-card-footer">
                                <div class="btn-group" role="group">
                                    <a class="btn btn-secondary" asp-action="Edit" asp-controller="Posts" asp-route-id="@item.Id">Edit</a>
                                </div>

                                @if (item.PostStatus == PostStatus.Available)
                                {
                                    <div class="btn-group" role="group">
                                        <form asp-action="Inactivate" asp-controller="Posts" asp-route-id="@item.Id" method="post">
                                            <button type="submit" class="btn btn-warning">Inactivate</button>
                                        </form>
                                    </div>
                                }
                                else if (item.PostStatus == PostStatus.Inactivated)
                                {
                                    <div class="btn-group" role="group">
                                        <form asp-action="Activate" asp-controller="Posts" asp-route-id="@item.Id" method="post">
                                            <button type="submit" class="btn btn-success">Activate</button>
                                        </form>
                                    </div>
                                }

                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-danger delete-btn" data-post-id="@item.Id">Delete</button>
                                </div>
                            </div>

                        </div>
                    </a>
                </div>
            }
        }
        else
        {
            <p>Your posts will be shown here when you create your first post.</p>
        }

    </div>
    <!-- Add this modal structure somewhere in your HTML -->
    <div id="deleteModal" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Delete</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="closeButton">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this post?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" id="cancelButton">Cancel</button>
                    <form method="post" action="">
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById("searchField").addEventListener('input', function (e) {
            const searchTerm = e.target.value.toLowerCase();
            const posts = document.querySelectorAll('.col-md-4.col-sm-6.mb-4'); // Update the selector to target the grid column

            posts.forEach(col => {
                const post = col.querySelector('.post-card');
                const title = post.getAttribute('data-title').toLowerCase();

                if (searchTerm === '' || title.includes(searchTerm)) {
                    col.style.display = ''; // Show the post column
                } else {
                    col.style.display = 'none'; // Hide the post column
                }
            });
        });

        // Handling delete button click to show modal
        const deleteButtons = document.querySelectorAll('.delete-btn');

        deleteButtons.forEach(button => {
            button.addEventListener('click', function () {
                const postId = this.getAttribute('data-post-id');
                const deleteModal = document.getElementById('deleteModal');

                // Set the action URL for the form in the modal
                deleteModal.querySelector('form').action = '/Posts/Delete/' + postId;
                $('#deleteModal').modal('show');
            });
        });
        document.getElementById("cancelButton").addEventListener("click", function () {
            document.getElementById("deleteModal").style.display = "none";
            var backdrop = document.querySelector('.modal-backdrop');
            if (backdrop) {
                backdrop.style.display = 'none'; // This hides the backdrop
                // Or, if you prefer to remove it completely
                backdrop.parentNode.removeChild(backdrop);
                window.location.reload();
            }
        });
        document.getElementById("closeButton").addEventListener("click", function () {
            document.getElementById("deleteModal").style.display = "none";
            var backdrop = document.querySelector('.modal-backdrop');
            if (backdrop) {
                backdrop.style.display = 'none'; // This hides the backdrop
                // Or, if you prefer to remove it completely
                backdrop.parentNode.removeChild(backdrop);
                window.location.reload();
            }
        });
    });


</script>