@using BilConnect.Models.PostModels;
@using System.Security.Claims;
@using BilConnect.Data.Enums;
@using System.Text.RegularExpressions;
@model IEnumerable<Post>

@{
    ViewData["Title"] = "List of Posts";
    ((List<Post>)Model).Sort();
}

<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* WhatsApp font style */
        margin: 0;
        padding: 0;
        background: rgb(240,224,209);
        background: linear-gradient(180deg, rgba(240,224,209,1) 0%, rgba(249,175,105,1) 100%);
        display: flex;
        flex-direction: column;
        min-height: 100vh;
    }

    .post-card {
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        overflow: hidden;
        height: 400px; /* Fixed height */
        display: flex;
        flex-direction: column;
        justify-content: space-between; /* Distributes space inside the card */
        background-color: #e5ddd5;
        animation: jumpIn 0.6s ease-out;
    }

    @@keyframes jumpIn {
        0% {
            transform: translateY(50px);
            opacity: 0;
        }

        50% {
            transform: translateY(-10px);
            opacity: 1;
        }

        100% {
            transform: translateY(0);
            opacity: 1;
        }
    }

    .post-info {
        display: flex;
        flex-direction: column;
        gap: 5px;
        color: black; /* Set the text color to gray */
    }

        /* To specifically target links within .post-info to ensure they are gray too */
        .post-info a {
            color: black;
        }

            /* Change color on hover for links, if desired */
            .post-info a:hover {
                color: lightgray; /* Replace with a darker shade of gray if you wish */
            }

    .info-item {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .material-icons {
        color: #757575; /* WhatsApp green */
    }


    .info-label {
        font-weight: bold;
        color: #555;
        margin-right: 5px;
    }

    .your-post {
        font-weight: bold;
        color: #555;
        align-items: center;
        text-decoration: none;
    }


    .post-card-header {
        background-color: #e5ddd5;
        color: black;
        text-align: center;
        font-family: "Segoe UI", Arial, sans-serif;
        padding: 10px;
        font-size: 25px;
    }

    .post-card-body {
        padding: 10px;
        background-color: #e5ddd5;
    }

    .post-img {
        width: 100%;
        height: 150px;
        object-fit: cover;
    }

    .post-card-footer {
        padding: 10px;
        background-color: #d4ccc4;
        text-align: center;
    }

    .btn-whatsapp {
        background-color: #757575;
        color: white;
    }

    .btn-secondary {
        background-color: #757575;
    }

    .btn-yourpost {
        background-color: transparent;
    }

    .search-container {
        display: flex;
        justify-content: center;
        margin-bottom: 20px;
    }

    .search-input {
        width: 70%;
        padding: 10px;
        border-radius: 20px;
        border: 1px solid #757575;
        outline: none;
    }

    .filter-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 250px; /* Adjust width if necessary */
        height: 100%;
        background-color: white; /* Set background color */
        z-index: 1000;
        overflow-y: auto; /* Scroll for long content */
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2); /* Shadow for depth */
    }

    .filter-dropdown {
        display: block; /* Always visible */
        position: relative;
        flex-direction: column;
        padding: 20px; /* Padding inside the filter box */
        background-color: white; /* Set background color for dropdown */
        border-radius: 0; /* Remove rounded corners if not needed */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15); /* Box shadow for each dropdown */
    }

    .filter-item {
        padding: 10px;
        display: flex;
        align-items: center;
        margin-bottom: 10px; /* Space between items */
    }

    /* Adjust content margin to align with filter container */
    .content {
        margin-left: 250px; /* Match with the width of filter-container */
        padding: 16px;
    }

    .filter-btn {
        padding: 10px;
        background-color: #757575;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .filter-checkbox {
        margin-right: 5px;
    }

    .sidenav {
        height: calc(100% - 140px); /* Adjusted height */
        width: 250px; /* Fixed width */
        position: fixed;
        z-index: 1;
        top: 140px; /* Start from 140px from the top */
        left: 0;
        border: 1px solid #ccc;
        background-color: #c3bbb3;
        padding-top: 20px;
        overflow-y: auto; /* Scroll for long content */
        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.3); /* Adding box shadow for depth */
    }

    .animated {
        transition: width 0.5s ease;
    }


    .sidenav a:hover {
        color: #f1f1f1;
    }

    .closebtn {
        font-size: 30px;
        background-color: transparent;
        color: black;
        margin-right: 15px;
        right: 15px !important;
        padding: 5px 10px; /* Adjust the padding to create the hit area */
        border: none; /* Remove borders */
        cursor: pointer;
        transition: 0.5s; /* Updated transition property */
    }

    .content {
        margin-left: 0;
    }

    #openFilterBtn {
        width: 40px; /* Set the width and height to create a circle */
        height: 40px;
        border-radius: 50%; /* Make it a circle */
        background-color: ghostwhite; /* Set your preferred background color */
        color: #fff; /* Set the text/icon color */
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: background-color 0.3s ease; /* Add a smooth transition effect */
        margin-right: 10px;
    }

        #openFilterBtn:hover {
            background-color: #1565C0; /* Change the background color on hover */
        }

</style>
<div class="sidenav">
    <div class="filter-dropdown" id="filterDropdown">
        <div>Category</div>
        <!-- Filter items -->
        <div class="filter-item">
            <input type="checkbox" id="SellingPost" class="filter-checkbox" onchange="applyFiltersAndSearch()">
            <label for="SellingPost">Selling Posts</label>
        </div>
        <div class="filter-item">
            <input type="checkbox" id="DonationPost" class="filter-checkbox" onchange="applyFiltersAndSearch()">
            <label for="DonationPost">Donation Posts</label>
        </div>
        <div class="filter-item">
            <input type="checkbox" id="BorrowingPost" class="filter-checkbox" onchange="applyFiltersAndSearch()">
            <label for="BorrowingPost">Borrowing Posts</label>
        </div>
        <div class="filter-item">
            <input type="checkbox" id="EventTicketPost" class="filter-checkbox" onchange="applyFiltersAndSearch()">
            <label for="EventTicketPost">Event Ticket Post</label>
        </div>
        <div class="filter-item">
            <input type="checkbox" id="FoundItemPost" class="filter-checkbox" onchange="applyFiltersAndSearch()">
            <label for="FoundItemPost">Found Item Posts</label>
        </div>
        <div class="filter-item">
            <input type="checkbox" id="LostItemPost" class="filter-checkbox" onchange="applyFiltersAndSearch()">
            <label for="LostItemPost">Lost Item Posts</label>
        </div>
        <div class="filter-item">
            <input type="checkbox" id="PetAdoptionPost" class="filter-checkbox" onchange="applyFiltersAndSearch()">
            <label for="PetAdoptionPost">Pet Adoption Posts</label>
        </div>
        <div class="filter-item">
            <input type="checkbox" id="TravellingPost" class="filter-checkbox" onchange="applyFiltersAndSearch()">
            <label for="TravellingPost">Travelling Posts</label>
        </div>
    </div>
</div>

<div class="container">
    <div class="search-container">
        <input type="text" class="search-input" id="searchQuery" placeholder="Search posts..." maxlength="100">
    </div>

    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-4 col-sm-6 mb-4">
                <a href="@Url.Action("Details", new { id = item.Id })" class="text-decoration-none">
                    <div class="post-card" data-title="@item.Title" data-post-type="@item.GetType()">
                        <div class="post-card-header">
                            @item.Title
                        </div>
                        <img src="@item.ImageURL" alt="@item.Title" class="post-img">
                        <div class="post-card-body">
                            <div class="post-info">
                                <p class="info-item">
                                    <i class="material-icons">person_outline</i>
                                    <span>Author: @item.User.FullName</span>
                                </p>
                                <p class="info-item">
                                    <i class="material-icons">event</i>
                                    <span>Date: @item.PostDate.ToLocalTime().ToString("dd MMM yyyy")</span>
                                </p>
                            </div>
                        </div>
                        <div class="post-card-footer">
                            @if (item.UserId != User.FindFirstValue(ClaimTypes.NameIdentifier))
                            {
                                @if (item is SellingPost sellingPost)
                                {
                                    <a class="btn btn-secondary" asp-action="BuyItem" asp-controller="Posts" asp-route-id="@item.Id">Buy for @sellingPost.Price TL</a>
                                }
                                else if (item is DonationPost donationPost)
                                {
                                    <a class="btn btn-secondary" asp-action="BuyItem" asp-route-id="@item.Id">Volunteer</a>
                                }
                                else if (item is BorrowingPost borrowingPost)
                                {
                                    <a class="btn btn-secondary" asp-action="BuyItem" asp-route-id="@item.Id">Borrow</a>
                                }
                                else if (item is EventTicketPost eventTicketPost)
                                {
                                    <a class="btn btn-secondary" asp-action="BuyItem" asp-route-id="@item.Id">Buy Event Ticket</a>
                                }
                                else if (item is FoundItemPost foundItemPost)
                                {
                                    <a class="btn btn-secondary" asp-action="BuyItem" asp-route-id="@item.Id">Learn Details</a>
                                }
                                else if (item is LostItemPost lostItemPost)
                                {
                                    <a class="btn btn-secondary" asp-action="BuyItem" asp-route-id="@item.Id">Give Information</a>
                                }
                                else if (item is PetAdoptionPost petAdoptionPost)
                                {
                                    <a class="btn btn-secondary" asp-action="BuyItem" asp-route-id="@item.Id">Adopt Pet</a>
                                }
                                else if (item is TravellingPost travellingPost)
                                {
                                    <a class="btn btn-secondary" asp-action="BuyItem" asp-route-id="@item.Id">Travel Together</a>
                                }
                            }
                            else
                            {
                                <a class="btn btn-secondary" asp-action="Details" asp-route-id="@item.Id">See Details of Your Post</a>
                            }
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>
</div>
<script>
    function applyFiltersAndSearch() {
        const searchTerm = document.getElementById("searchQuery").value.toLowerCase();
        const checkboxes = document.querySelectorAll('.filter-checkbox');
        const posts = document.querySelectorAll('.col-md-4.col-sm-6.mb-4');

        posts.forEach(col => {
            const post = col.querySelector('.post-card');
            const title = post.getAttribute('data-title').toLowerCase();
            const postType = post.getAttribute('data-post-type');

            const isTitleMatch = searchTerm === '' || title.includes(searchTerm);
            const isFilterMatch = Array.from(checkboxes).some(checkbox =>
                checkbox.checked && postType.includes(checkbox.id));

            if (isTitleMatch && (isFilterMatch || Array.from(checkboxes).every(checkbox => !checkbox.checked))) {
                col.style.display = ''; // Show the post
            } else {
                col.style.display = 'none'; // Hide the post
            }
        });
    }

    document.getElementById("searchQuery").addEventListener('input', applyFiltersAndSearch);

    Array.from(document.querySelectorAll('.filter-checkbox')).forEach(checkbox => {
        checkbox.addEventListener('change', applyFiltersAndSearch);
    });
</script>
@await Html.PartialAsync("_CreatePost", "Posts")